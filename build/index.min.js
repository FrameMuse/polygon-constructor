"use strict";class Point{x;y;constructor(t,e){this.x=t,this.y=e}add(t,e){t instanceof Point&&(this.x+=t.x,this.y+=t.y),"number"==typeof t&&"number"==typeof e&&(this.x+=t,this.y+=e)}subtract(t,e){t instanceof Point&&(this.x-=t.x,this.y-=t.y),"number"==typeof t&&"number"==typeof e&&(this.x-=t,this.y-=e)}power(t,e){return t instanceof Point&&(this.x*=t.x,this.y*=t.y),"number"==typeof t&&"number"==typeof e&&(this.x*=t,this.y*=e),this}divide(t,e){return t instanceof Point&&(this.x/=t.x,this.y/=t.y),"number"==typeof t&&void 0===e&&(this.x/=t,this.y/=t),"number"==typeof t&&"number"==typeof e&&(this.x/=t,this.y/=e),this}equals(t){return this.x===t.x&&this.y===t.y}lessThan(t){return this.x<t.x||this.y<t.y}greaterThan(t){return this.x>t.x||this.y>t.y}clone(){return new Point(this.x,this.y)}toString(){return`(${this.x}, ${this.y})`}reverse(){return this.y=this.x,this.x=this.y,this}normalize(t){return this.x=t(this.x),this.y=t(this.y),this}}class CSSTransform{functions;origin=[new CSSUnit(0),new CSSUnit(0)];#callbacks=[];constructor(t){var e;this.functions={},"string"==typeof t&&(this.functions=CSSTransform.parse(t)),t instanceof CSSTransform&&(this.functions=t.functions),t instanceof HTMLElement&&(e=t.style.transform,this.functions=CSSTransform.parse(e),this.connect(t)),observeObject(this,"functions",this.#callbacks)}observe(t){this.#callbacks.push(t)}connect(t){this.observe(()=>{t.style.transform=this.stringifyFunctions(),t.style.transformOrigin=this.stringifyOrigin()})}stringifyFunctions(){const t=[];for(var[e,n]of Object.entries(this.functions))t.push(e+"("+n.toString()+")");return t.join(" ")}stringifyOrigin(){return this.origin[0].toString()+" "+this.origin[1].toString()}static parse(t){if(0===t.length)return{};const e={};for(const n of t.split(" ")){const[o,s]=n.split("(");e[o]=new CSSUnit(s.slice(0,-1))}return e}}class CSSUnit{value;type;static Types=["px","cm","mm","in","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","%","deg","rad","turn","s","ms","Hz","kHz","dpi","dpcm","dppx","fr"];constructor(t,e){if(this.value=0,this.type=void 0,"string"==typeof t&&void 0===e){var n=/([0-9.]+)(.*)?/.exec(t);if(null===n)throw new Error("Invalid unit");var o=n[1],n=n[2];if(!CSSUnit.checkType(n))throw new Error("Invalid unit type");this.value=parseFloat(o),this.type=n}"number"==typeof t&&(this.value=t,this.type=e)}toString(){return this.value+(this.type??"")}static checkType(t){return CSSUnit.Types.includes(t)}}class EventEmitter{#listeners=new Map;on(t,e){this.#listeners.has(t)||this.#listeners.set(t,new Set),this.#listeners.get(t).add(e)}off(t,e){this.#listeners.has(t)&&this.#listeners.get(t).delete(e)}emit(t,...e){if(this.#listeners.has(t))for(const n of this.#listeners.get(t))n(...e)}}class PolygonComponent{#boundElement;#transform;constructor(t){if(!(t instanceof HTMLElement))throw new Error("boundElement must be an instance of HTMLElement");this.#boundElement=t,this.#transform=new CSSTransform(t)}get rect(){return this.#boundElement.getBoundingClientRect()}get size(){var t=this.rect;return new Point(t.width,t.height)}get leftTop(){var t=this.rect;return new Point(t.left,t.top)}get rightBottom(){var t=this.rect;return new Point(t.right,t.bottom)}get borderLeftTop(){var t=getComputedStyle(this.boundElement),e=parseFloat(t.borderLeftWidth),t=parseFloat(t.borderTopWidth);return new Point(e,t)}get borderRightBottom(){var t=getComputedStyle(this.boundElement),e=parseFloat(t.borderRightWidth),t=parseFloat(t.borderBottomWidth);return new Point(e,t)}get boundElement(){return this.#boundElement}get transform(){return this.#transform}}class Polygon{boundary;area;picker;entries;blocks;constructor(){var t=document.body.querySelector("[pc-boundary]"),e=document.body.querySelector("[pc-area]"),n=document.body.querySelector("[pc-picker]"),o=document.body.querySelector("[pc-entries]");if(!(t instanceof HTMLElement))throw new Error("Polygon constructor: no boundary element found");if(!(n instanceof HTMLElement))throw new Error("Polygon constructor: no picker element found");if(!(e instanceof HTMLElement))throw new Error("Polygon constructor: no polygon element found");if(!(o instanceof HTMLElement))throw new Error("Polygon constructor: no entries element found");this.boundary=new PolygonBoundary(t),this.area=new PolygonArea(e),this.picker=new PolygonPicker(n),this.entries=new PolygonEntries(o),this.blocks=new PolygonBlocks,this.#startLogic()}#startLogic(){let o=new Point(0,0);this.boundary.onDragStart((t,e)=>{e.preventDefault(),o=new Point(e.offsetX,e.offsetY);const n=new Point(e.x,e.y);n.subtract(o),t.transform.origin=[new CSSUnit(e.offsetX,"px"),new CSSUnit(e.offsetY,"px")],t.position=this.area.fromAbsoluteToRelative(n),this.area.checkIfObjectAllowed(t)}),this.boundary.onDrag((t,e)=>{e.preventDefault();const n=new Point(e.x,e.y);n.subtract(o),t.position=this.area.fromAbsoluteToRelative(n),this.area.checkIfObjectAllowed(t)}),this.boundary.onDragEnd((t,e)=>{e.preventDefault(),(this.boundary.selectedObject=t).state.notAllowed&&this.area.unsettle(t)}),this.boundary.onKeyDown("r",t=>{t.altKey||t.ctrlKey||(t.preventDefault(),this.boundary.draggingObject&&this.boundary.draggingObject.rotate())}),this.boundary.onSelectedObjectChange(e=>{const t=this.entries.setEntry("selected-block",e.block.name),n=document.createElement("button");n.type="button",n.textContent="Rotate",n.addEventListener("pointerdown",()=>{var t=new Point(e.rect.width/2,e.rect.height/2);e.rotate(t)}),t.append(n),addElementClassModification(t,"blue")}),this.blocks.on("add",t=>{const o=this.picker.addComponent(t);this.area.getObjectsById(t.id).forEach(t=>{o.usedAmount++,t.onUnsettled(()=>{o.usedAmount--})}),o.polygonObject.on("pointerdown",(t,e)=>{if(e.preventDefault(),!(o.usedAmount>=o.maxAmount)){const n=o.polygonObject.clone();this.boundary.makePolygonObjectDraggable(n),o.usedAmount++,n.onUnsettled(()=>{o.usedAmount--}),this.boundary.startDragging(n,e),this.area.settle(n)}})}),this.blocks.on("remove",t=>{this.picker.removeComponent(t)})}reset(){this.area.clear(),this.blocks.clear()}export(t){const e=[];for(const o of this.area.objects){const s=o.position.clone();var n;o.rotated&&(n=new Point(o.transform.origin[0].value,o.transform.origin[1].value),s.x+=n.x+n.y,s.y+=n.y-n.x),t&&s.normalize(t),e.push({id:o.block.id,x:s.x,y:s.y,angle:o.rotated?90:0})}return e}import(...t){if(0<this.area.objectsCount)throw new Error("Polygon import: cannot import when there are already objects in the area.");this.picker.clearUsedAmount();for(const e of t){const n=this.picker.getComponentById(e.id);if(null==n)throw new Error(`Polygon import: block with id ${e.id} not found`);const o=n.polygonObject.clone();90===e.angle&&o.rotate(),o.position=new Point(e.x,e.y),this.boundary.makePolygonObjectDraggable(o),n.usedAmount++,o.onUnsettled(()=>{n.usedAmount--}),this.area.settle(o)}}}class PolygonBlocks extends EventEmitter{#blocks=new Map;add(t){this.#blocks.set(t.id,t),this.emit("add",t)}remove(t){this.#blocks.delete(t.id),this.emit("remove",t)}removeById(t){t=this.getById(t);null!=t&&this.remove(t)}getById(t){return this.#blocks.get(t)||null}clear(){for(const t of this.#blocks.values())this.remove(t)}get size(){return this.#blocks.size}get list(){return[...this.#blocks.values()]}}class PolygonArea extends PolygonComponent{#objects=new Set;#events=new EventEmitter;settle(t){observeStyleChange(t.boundElement,()=>{this.checkIfObjectAllowed(t)}),this.#objects.add(t),this.#render(),t.settled(),this.#events.emit("change",this.objects)}unsettle(t){this.#objects.delete(t),this.#render(),t.unsettled(),this.#events.emit("change",this.objects)}unsettleAllById(t){for(const e of this.#objects)e.block.id===t&&this.unsettle(e)}unsettleLastById(t){for(const e of this.#objects)if(e.block.id===t)return void this.unsettle(e)}#render(){this.boundElement.replaceChildren();for(const t of this.#objects)this.boundElement.append(t.boundElement)}get objects(){return[...this.#objects]}get objectsCount(){return this.#objects.size}getObjectsById(e){return this.objects.filter(t=>t.block.id===e)}clear(){this.#objects.clear(),this.#render()}onChange(t){this.#events.on("change",t)}contains(t){const e=this.leftTop.clone(),n=(e.add(this.borderLeftTop),this.rightBottom.clone());return n.subtract(this.borderRightBottom),!e.greaterThan(t.leftTop)&&!n.lessThan(t.rightBottom)}intersectsAny(t){for(const e of this.#objects)if(t.intersects(e))return!0;return!1}fromAbsoluteToRelative(t){const e=t.clone();return e.subtract(this.rect.left,this.rect.top),e.subtract(this.borderLeftTop),e}checkIfObjectAllowed(t){return!this.contains(t)||this.intersectsAny(t)?!(t.state.notAllowed=!0):!(t.state.notAllowed=!1)}checkIfObjectsAllowed(t){return t.every(this.checkIfObjectAllowed.bind(this))}}class PolygonBoundary extends PolygonComponent{#draggingEvents=new EventEmitter;#events=new EventEmitter;constructor(t){super(t)}#draggingObject=null;get draggingObject(){return this.#draggingObject}set draggingObject(t){if(this.#draggingObject!==t){if(null!=this.#draggingObject&&null==t)return this.#draggingObject.state.dragging=!1,void(this.#draggingObject=null);if(null!=t)return this.#draggingObject=t,void(this.#draggingObject.state.dragging=!0);throw new Error("Something wrong")}}#selectedObject=null;get selectedObject(){return this.#selectedObject}set selectedObject(t){null!==t&&this.#selectedObject!==t&&(this.#selectedObject&&(this.#selectedObject.state.selected=!1),t.state.selected=!0,this.#selectedObject=t,this.#events.emit("selectedObjectChange",t))}startDragging(e,t){if(!this.draggingObject&&!e.state.dragging&&e.state.draggable){if(t.pressure<.5)throw new Error("Pointer down event pressure is too low, probably not a real pointer down event.");t.preventDefault(),this.draggingObject=e,this.#draggingEvents.emit("dragstart",e,t);const n=t=>{this.#draggingEvents.emit("drag",e,t)};this.boundElement.addEventListener("pointermove",n),window.addEventListener("pointerup",t=>{this.draggingObject=null,this.boundElement.removeEventListener("pointermove",n),this.#draggingEvents.emit("dragend",e,t)},{once:!0})}}makePolygonObjectDraggable(t){t.state.dragging||t.state.draggable||(t.state.draggable=!0,t.on("pointerdown",this.startDragging.bind(this)))}onSelectedObjectChange(t){this.#events.on("selectedObjectChange",t)}onDrag(t){this.#draggingEvents.on("drag",t)}onDragStart(t){this.#draggingEvents.on("dragstart",t)}onDragEnd(t){this.#draggingEvents.on("dragend",t)}onKeyDown(e,n){window.addEventListener("keydown",t=>{t.code==="Key"+e.toUpperCase()&&n(t)})}}class PolygonEntries extends PolygonComponent{entries=new Map;setEntry(t,e,n){if(!this.entries.has(t)){const o=this.createEntryElement();this.entries.set(t,o),this.boundElement.appendChild(o)}const o=this.entries.get(t);return o.textContent=e,n&&(o.className=[...o.classList.values()][0],addElementClassModification(o,n)),o}deleteEntry(t){const e=this.entries.get(t);null!=e&&(e.textContent="",this.entries.delete(t))}createEntryElement(){const t=document.createElement("div");return t.classList.add(this.boundElement.className+"__entry"),t}}class PolygonObject extends PolygonComponent{#listeners=new Map;#onSettledCallbacks=[];#onUnsettledCallbacks=[];rotated=!1;block;state={draggable:!1,dragging:!1,notAllowed:!1,selected:!1};constructor(t,e){super(t),this.block=e,decorateClassModifierToggle(this,"state",this.boundElement),this.on("contextmenu",(t,e)=>{e.preventDefault()})}intersects(t){if(this===t)return!1;var e=this.rect,t=t.rect;return!(e.top>t.bottom)&&(!(e.bottom<t.top)&&(!(e.left>t.right)&&!(e.right<t.left)))}get position(){var t=this.transform.functions.translateX,e=this.transform.functions.translateY;return new Point(t?.value??0,e?.value??0)}set position(t){this.transform.functions.translateX=new CSSUnit(t.x,"px"),this.transform.functions.translateY=new CSSUnit(t.y,"px")}rotate(t){this.rotated=!this.rotated,t&&(this.transform.origin=[new CSSUnit(t.x,"px"),new CSSUnit(t.y,"px")]),this.transform.functions.rotateZ=new CSSUnit(this.rotated?90:0,"deg")}clone(){const t=new PolygonObject(this.boundElement.cloneNode(!0),this.block);return t.position=this.position,t.state={...this.state},t}onSettled(t){this.#onSettledCallbacks.push(t)}settled(){for(const t of this.#onSettledCallbacks)t()}onUnsettled(t){this.#onUnsettledCallbacks.push(t)}unsettled(){for(const t of this.#onUnsettledCallbacks)t()}destroy(){this.boundElement.remove(),this.#listeners.clear()}on(t,e,n){var o=t=>e(this,t);this.#listeners.set(e,o),("pointerup"===t?document:this.boundElement).addEventListener(t,o,n)}}const PICKET_BLOCK_CLASS="polygon-constructor-sidebar-block";class PolygonPicker extends PolygonComponent{#components=new Map;addComponent(t){var e=new PolygonPickerComponent(t);return this.#components.set(t.id,e),this.#render(),e}removeComponent(t){null!=this.getComponentById(t.id)&&this.removeComponentById(t.id)}removeComponentById(t){this.#components.delete(t),this.#render()}getComponentById(e){return[...this.#components.values()].find(t=>t.polygonObject.block.id===e)}clearUsedAmount(){for(const t of this.#components.values())t.usedAmount=0}get components(){return[...this.#components.values()]}getUnrealizedComponents(){return[...this.#components.values()].filter(t=>t.usedAmount!==t.maxAmount)}getUnderusedComponents(){return[...this.#components.values()].filter(t=>t.usedAmount<t.maxAmount)}getOverusedComponents(){return[...this.#components.values()].filter(t=>t.usedAmount>t.maxAmount)}#render(){this.boundElement.replaceChildren();for(const t of this.#components.values())this.boundElement.append(t.element)}}class PolygonPickerComponent{#element;#polygonObject;#amountElement;maxAmount=0;#usedAmount=0;set usedAmount(t){this.#usedAmount=t,this.#amountElement.textContent="x"+String(this.maxAmount-t),toggleElementClassModification(this.#element,"disabled",t>=this.maxAmount)}get usedAmount(){return this.#usedAmount}constructor(t){this.maxAmount=t.amount,this.#element=composePickerBlockElement(),this.#polygonObject=composePolygonObject(t),this.#element.append(composePickerBlockTitleElement(t.name)),this.#element.append(this.#polygonObject.boundElement),this.#amountElement=composePickerBlockAmountElement(t.amount),this.#element.append(this.#amountElement)}get element(){return this.#element}get polygonObject(){return this.#polygonObject}}function composePickerBlockElement(){const t=document.createElement("div");return t.className=PICKET_BLOCK_CLASS,t}function composePolygonObject(t){null==t.id&&(t.id=-1);const e=document.createElement("div");return e.appendChild(composeImageElement("elements/"+t.id.toString()+".png")),e.classList.add(DEFAULT_CLASS_NAME),new PolygonObject(e,t)}function composeImageElement(t){const e=document.createElement("img");return e.src=t,e}function composePickerBlockTitleElement(t){const e=document.createElement("div");return e.className=PICKET_BLOCK_CLASS+"__title",e.textContent=t,e}function composePickerBlockAmountElement(t){const e=document.createElement("div");return e.className=PICKET_BLOCK_CLASS+"__amount",e.textContent="x"+String(t),e}Math.clamp=function(t,e,n){return Math.min(Math.max(t,e),n)};const CLASS_SPLITTER="--",DEFAULT_CLASS_NAME="polygon-constructor__object";function observeObject(t,e,r){var n=t[e];if(!isDictionary(n))throw new Error(e.toString()+" is not a dictionary");n=new Proxy(n,{set(t,e,n,o){if(!Reflect.set(t,e,n,o))return!1;for(const s of r)s();return!0}});Reflect.set(t,e,n)}function observeStyleChange(t,e){const n=new MutationObserver(e);n.observe(t,{attributes:!0,attributeFilter:["style"]})}function isElementClassModifiedBy(t,e){var n=t.classList[0];return t.classList.contains(n+CLASS_SPLITTER+e)}function addElementClassModification(t,e){var n;isElementClassModifiedBy(t,e)||(n=t.classList[0],t.classList.add(n+CLASS_SPLITTER+e))}function removeElementClassModification(t,e){var n;isElementClassModifiedBy(t,e)&&(n=t.classList[0],t.classList.remove(n+CLASS_SPLITTER+e))}function toggleElementClassModification(t,e,n){var o=t.classList[0];!0===n?t.classList.add(o+CLASS_SPLITTER+e):t.classList.remove(o+CLASS_SPLITTER+e)}function createClassModifierToggleProxy(t,o){if(!isDictionary(t))throw new Error("value is not a dictionary");if(!Object.values(t).every(t=>"boolean"==typeof t))throw new Error("value must be a dictionary of booleans");const s=Object.keys(t).reduce((t,e)=>({...t,[e]:camelToDash(e)}),{});return new Proxy(t,{set(t,e,n){return t[e]===n||(t[e]=n,toggleElementClassModification(o,s[e],n)),!0}})}function decorateClassModifierToggle(t,e,n){let o=createClassModifierToggleProxy(t[e],n);Object.defineProperty(t,e,{get(){return o},set(t){o=createClassModifierToggleProxy(t,n)}})}function isDictionary(t){return t instanceof Object&&t.constructor===Object}function camelToDash(t){return t=(t=t.toString())!=t.toLowerCase()?t.replace(/[A-Z]/g,t=>"-"+t.toLowerCase()):t}